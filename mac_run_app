#!/usr/bin/env bash
set -Eeuo pipefail

# === Ubicaci칩n del proyecto (puede estar en USB solo-lectura) ===
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
cd "$SCRIPT_DIR"

APP_ID="product_research_app"
APP_STATE_DIR="${APP_STATE_DIR:-$HOME/Library/Application Support/$APP_ID}"
LOG_DIR="${LOG_DIR:-$HOME/Library/Logs/$APP_ID}"
VENV_DIR="$APP_STATE_DIR/.venv"
REQ_FILE="$SCRIPT_DIR/requirements.txt"
HASH_FILE="$VENV_DIR/.req.sha256"

mkdir -p "$APP_STATE_DIR" "$LOG_DIR"

# === Selecci칩n de Python 3.10+ ===
find_python() {
  for c in "${PYTHON_BIN:-}" python3.12 python3.11 python3.10 python3; do
    if [[ -n "$c" ]] && command -v "$c" >/dev/null 2>&1; then
      echo "$c"; return 0
    fi
  done
  echo "No se encontr칩 Python 3.10+. Inst치lalo desde https://www.python.org" >&2
  exit 1
}
PY="$(find_python)"

# === Venv en carpeta de usuario (escribible) ===
if [[ ! -d "$VENV_DIR" ]]; then
  "$PY" -m venv "$VENV_DIR"
fi

# shellcheck source=/dev/null
source "$VENV_DIR/bin/activate"

python - <<'PY'
import sys, platform
maj, min = sys.version_info[:2]
if (maj, min) < (3, 10):
    raise SystemExit(f"Se requiere Python>=3.10 en el venv, encontrado {platform.python_version()}")
PY

calc_hash() { shasum -a 256 "$REQ_FILE" | awk '{print $1}'; }

if [[ ! -f "$HASH_FILE" || "$(calc_hash)" != "$(cat "$HASH_FILE" 2>/dev/null || true)" ]]; then
  python -m pip install --upgrade pip
  pip install -r "$REQ_FILE"
  calc_hash > "$HASH_FILE"
fi

export PYTHONUNBUFFERED=1

# Abre el navegador en segundo plano
( sleep 2; open -g "http://127.0.0.1:8000" ) >/dev/null 2>&1 &

# Ejecuta la app desde el directorio del proyecto
python -u -m product_research_app 2>&1 | tee "$LOG_DIR/session.log"
